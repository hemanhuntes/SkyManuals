version: '3.8'

services:
  postgres-test:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: skymanuals_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis-test:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  api-test:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://postgres:password@postgres-test:5432/skymanuals_test
      TEST_DATABASE_URL: postgresql://postgres:password@postgres-test:5432/skymanuals_test
      REDIS_HOST: redis-test
      REDIS_PORT: 6379
      JWT_SECRET: test-jwt-secret
      OPENAI_API_KEY: test-openai-key
      AWS_ACCESS_KEY_ID: test-access-key
      AWS_SECRET_ACCESS_KEY: test-secret-key
      AWS_S3_BUCKET: test-bucket
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    command: npm run test:e2e
    volumes:
      - ./apps/api:/app
      - /app/node_modules

volumes:
  postgres_test_data:
  redis_test_data:
